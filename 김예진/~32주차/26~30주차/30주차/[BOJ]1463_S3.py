"""
1. X가 3으로 나누어 떨어지면, 3으로 나눈다.
2. X가 2로 나누어 떨어지면, 2로 나눈다.
3. 1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값
"""

n = int(input())

d = [0] * (n+1) # d는 인덱스 숫자별 연산횟수를 저장할 배열. d[0]은 n 범위에 포함 X, d[1]은 1이므로 연산횟수가 0
                      # -> d[2]부터 연산횟수 계산

for i in range(2, n+1):
    # n = 3을 가정

    # 3. 1을 뺀다 (항상 수행 가능)
    d[i] = d[i-1] + 1 # 1을 빼는 연산을 수행. d[3]은 d[2]에서 +1를 수행했으므로 연산횟수가 1개 추가

    # 1. 3으로 나누어 떨어지는 경우 3으로 나눈다.
    if (i % 3 == 0):
        # 현재 시점 기준
        # d[i] = d[3] = d[2]에서 +1을 수행한 시점의 연산횟수
        # d[i//3] = d[3//3] + 1 = d[1] + 1 
        # d[i], d[i//3]+1 중 연산횟수가 작은 값을 선택
        d[i] = min(d[i], d[i//3] + 1) 
    
    # 2. 2로 나누어 떨어지는 경우 2로 나눈다.
    if (i % 2 == 0):
        d[i] = min(d[i], d[i//2] + 1)

print(d[n])